workflows:
  react-native:
    name: React Native Firebase Distribution
    max_build_duration: 60
    integrations:
      app_store_connect: Amwal CodeMagic
      
    environment:
      groups:
        - firebase_credentials
      ios_signing:
        provisioning_profiles:
          - reactnative
        certificates:
          - Code Magic Apple Dis
      vars:
        GRADLE_USER_HOME: ~/.gradle
        NODE_VERSION: "22.15.0"
        GOOGLE_APPLICATION_CREDENTIALS: $FIREBASE_SERVICE_ACCOUNT
        XCODE_WORKSPACE: "ReactAmwalPayExample.xcworkspace"
        XCODE_SCHEME: "ReactAmwalPayExample"
      node: "$NODE_VERSION"
      xcode: latest
      java: 17
      cocoapods: default
    
    scripts:
      - name: Install dependencies
        script: |
          cd example
          yarn install
      - name: Build Android APK
        script: |
          cd example/android
          chmod +x gradlew
          ./gradlew assembleRelease
      - name: Increment iOS build number
        script: |
          cd example/ios
          agvtool new-version -all $(($BUILD_NUMBER + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          cd example/ios
          xcode-project use-profiles 

      - name: Build iOS 
        script: |
          cd example/ios 
          pod install
          xcode-project build-ipa \
              --workspace "$XCODE_WORKSPACE" \
              --scheme "$XCODE_SCHEME" \
              --archive-flags="-destination 'generic/platform=iOS' BUILD_LIBRARIES_FOR_DISTRIBUTION=NO"
    artifacts:
      - example/android/app/build/outputs/**/*.apk
      - example/ios/build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      firebase:
        firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
        android:
          app_id: $FIREBASE_ANDROID_APP_ID
          artifact_type: 'apk'
          groups: 
            - tester
      email:
        recipients:
          - amr.saied@amwal-pay.com
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - Tester
        submit_to_app_store: false

  package-publish:
    name: Build and Publish Package
    max_build_duration: 30
    environment:
      vars:
        NODE_VERSION: "22.15.0"
      node: "$NODE_VERSION"
      java: 17
      groups:
        - npm_credentials
    scripts:
      - name: Install dependencies
        script: |
          yarn install --frozen-lockfile
      - name: Build package
        script: |
          yarn prepare
      - name: Bump version from latest published
        script: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          CURRENT_VERSION=$(npm view "$PACKAGE_NAME" version 2>/dev/null || echo "0.0.0")

          echo "ðŸ“¦ Latest published version: $CURRENT_VERSION"

          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          PATCH=$((PATCH + 1))
          NEXT_VERSION="$MAJOR.$MINOR.$PATCH"

          echo "ðŸ”¢ Next version: $NEXT_VERSION"

          node -e "
            const fs = require('fs');
            const path = './package.json';
            const pkg = JSON.parse(fs.readFileSync(path));
            pkg.version = '$NEXT_VERSION';
            fs.writeFileSync(path, JSON.stringify(pkg, null, 2) + '\n');
          "
      - name: Set up npm authentication
        script: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - name: Publish to npm
        script: |
          npm publish --access public